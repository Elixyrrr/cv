<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MongoDB on Ilyes Khedhiri</title>
    <link>http://localhost:1313/tags/mongodb/</link>
    <description>Recent content in MongoDB on Ilyes Khedhiri</description>
    <generator>Hugo</generator>
    <language>fr</language>
    <lastBuildDate>Sat, 31 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Évaluation de la qualité d’un graphe de connaissance avec un pipeline RAG</title>
      <link>http://localhost:1313/projects/creations/kg/</link>
      <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/creations/kg/</guid>
      <description>&lt;p&gt;RAG (Retrieval-Augmented Generation) « &lt;!-- raw HTML omitted --&gt;est une méthode qui enrichit les prompts du LLM avec un contexte pertinent récupéré pour réduire les hallucinations et améliorer la précision factuelle.&lt;!-- raw HTML omitted --&gt; »  .Dans ce projet on utilise Ollama pour exécuter un LLM local qui, à partir de triplets récupérés par FAISS depuis un graphe de connaissance, va évaluer la qualité du graphe en comparant les réponses générées aux données sources.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jeu d’échecs en ligne</title>
      <link>http://localhost:1313/projects/creations/chess/</link>
      <pubDate>Thu, 15 May 2025 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/creations/chess/</guid>
      <description>&lt;p&gt;Le projet consistait à créer une application web de jeu d’échecs conforme à une architecture REST (Répresentationnal State Transfer) et au pattern MVC (Modèle-Vue-Contrôleur). Les deux joueurs peuvent s’affronter en temps réel via Socket.IO, et chaque partie est sauvegardée dans MongoDB (ou SQL) pour être reprise coup par coup. Des fonctionnalités annexes, comme le chronomètre, la demande de partie à l’adversaire et la possibilité de rejouer un coup, ont été implémentées. En bonus, une IA basique a été développée pour permettre à l’utilisateur de jouer contre l’ordinateur. Les technologies employées incluent Node.js, Express, Socket.IO et MongoDB.&#xA;Le site prend un peu de temps à se lancer.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
